export declare type Deps<T extends Record<string, any>> = {
    [P in keyof T]: T[P] extends {
        _velona: boolean;
    } ? (...args: Parameters<T[P]>) => ReturnType<T[P]> : T[P];
};
export declare const depend: <T extends Record<string, any>, U extends any[], V>(dependencies: T, cb: (deps: Deps<T>, ...args: U) => V) => {
    (...args: U): V;
    _velona: boolean;
    inject(deps: Deps<T>): (...args: U) => V;
};
//# sourceMappingURL=index.d.ts.map