"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.optionToRequest = exports.dataToURLString = exports.dataToFormData = exports.headersToObject = void 0;
var headersToObject = function (headers) {
    return __spread(headers.entries()).reduce(function (prev, _a) {
        var _b;
        var _c = __read(_a, 2), key = _c[0], val = _c[1];
        return (__assign(__assign({}, prev), (_b = {}, _b[key] = val, _b)));
    }, {});
};
exports.headersToObject = headersToObject;
var dataToFormData = function (data) {
    var formData = new FormData();
    var _loop_1 = function (key) {
        if (Array.isArray(data[key])) {
            data[key].forEach(function (d) { return formData.append(key, d); });
        }
        else {
            formData.append(key, data[key]);
        }
    };
    for (var key in data) {
        _loop_1(key);
    }
    return formData;
};
exports.dataToFormData = dataToFormData;
var encode = function (str) {
    return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function (match) {
        return ({
            '!': '%21',
            "'": '%27',
            '(': '%28',
            ')': '%29',
            '~': '%7E',
            '%20': '+',
            '%00': '\x00'
        }[match]);
    });
};
var dataToURLString = function (data) {
    return Object.keys(data)
        .map(function (key) {
        return Array.isArray(data[key])
            ? data[key].map(function (v) { return encode(key) + "=" + encode(v); }).join('&')
            : encode(key) + "=" + encode(data[key]);
    })
        .join('&');
};
exports.dataToURLString = dataToURLString;
var optionToRequest = function (option, type) {
    if (!(option === null || option === void 0 ? void 0 : option.body))
        return option;
    var httpBody;
    var headers = {};
    switch (type) {
        case 'FormData':
            httpBody = exports.dataToFormData(option.body);
            break;
        case 'URLSearchParams':
            httpBody = exports.dataToURLString(option.body);
            headers['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8';
            break;
        case 'ArrayBuffer':
        case 'string':
        case 'Blob':
        case 'any':
            httpBody = option.body;
            break;
        default:
            httpBody = JSON.stringify(option.body);
            headers['Content-Type'] = 'application/json;charset=utf-8';
            break;
    }
    return __assign(__assign({ httpBody: httpBody }, option), { headers: __assign(__assign({}, headers), option.headers) });
};
exports.optionToRequest = optionToRequest;
//# sourceMappingURL=index.js.map